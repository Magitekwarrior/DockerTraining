version: "3.8"

services: 
  server:
    # image: 'nginx:stable-alpine'
    build:
      context: . # this context sets where to find AND where dockerfile gets built
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: 
      - php
      - mysql
  php:
    build: 
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes: 
      - ./src:/var/www/html:delegated
  mysql:
    image: mysql:5.7
    ports:
      - '9000:3306'
    env_file: 
      - ./env/mysql.env
  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build: 
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes: 
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes: 
      - ./src:/var/www/html

# compose commands:
 # docker-compose run --rm composer create-project --prefer-dist laravel/laravel .
 # docker-compose up -d

 # docker-compose run --rm artisan migrate

# ISSUES with artisan migrate
# docker-compose run --rm artisan cache:clear
# docker-compose run --rm artisan config:cache
# docker-compose run --rm artisan view:clear
# docker-compose run --rm artisan route:clear
# docker-compose run --rm artisan config:clear

